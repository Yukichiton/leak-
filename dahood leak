-- Note: i put injection logs bellow cus im interested who uses my version
-- Note: i put injection logs bellow cus im interested who uses my version
-- Note: i put injection logs bellow cus im interested who uses my version
-- Note: i put injection logs bellow cus im interested who uses my version
-- Note: i put injection logs bellow cus im interested who uses my version
-- Note: i put injection logs bellow cus im interested who uses my version
-- Note: i put injection logs bellow cus im interested who uses my version
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!
--] Full Credits to fineobe !!

--] Modified By Me

if isfile("menu_plex.font") then
	delfile("menu_plex.font")
end

writefile("ProggyClean.ttf", game:HttpGet("https://github.com/f1nobe7650/other/raw/main/ProggyClean.ttf"))

-- // Custom Font
do
	getsynasset = getcustomasset or getsynasset
	Font = setreadonly(Font, false);
	function Font:Register(Name, Weight, Style, Asset)
		if not isfile(Name .. ".font") then
			if not isfile(Asset.Id) then
				writefile(Asset.Id, Asset.Font);
			end;
			--
			local Data = {
				name = Name,
				faces = {{
					name = "Regular",
					weight = Weight,
					style = Style,
					assetId = getsynasset(Asset.Id);
				}}
			};
			--
			writefile(Name .. ".font", game:GetService("HttpService"):JSONEncode(Data));
			return getsynasset(Name .. ".font");
		else 
			warn("Font already registered");
		end;
	end;
	--
	function Font:GetRegistry(Name)
		if isfile(Name .. ".font") then
			return getsynasset(Name .. ".font");
		end;
	end;

	Font:Register("menu_plex", 400, "normal", {Id = "ProggyClean.ttf", Font = ""});
end

if not LPH_OBFUSCATED then
    getfenv().LPH_NO_VIRTUALIZE = function(...) return (...) end;
end

local font = Enum.Font.Ubuntu;
local Library = {};
local Library = {
	Open = true;
	Folders = {
		main = "test";
		configs = "test/Configs";
	};
	Accent = Color3.fromRGB(238,32,253);
	Pages = {};
	Sections = {};
	Flags = {};
	UnNamedFlags = 0;
	ThemeObjects = {};
	Instances = {};
	Holder = nil;
	PageHolder = nil;
	Gradient = nil;
	UIGradient = nil;
	CopiedColor = Color3.new(1,1,1);
	CopiedAlpha = 0;
	AllowedCharacters = {
		[1] = ' ',
		[2] = '!',
		[3] = '"',
		[4] = '#',
		[5] = '$',
		[6] = '%',
		[7] = '&',
		[8] = "'",
		[9] = '(',
		[10] = ')',
		[11] = '*',
		[12] = '+',
		[13] = ',',
		[14] = '-',
		[15] = '.',
		[16] = '/',
		[17] = '0',
		[18] = '1',
		[19] = '2',
		[20] = '3',
		[21] = '4',
		[22] = '5',
		[23] = '6',
		[24] = '7',
		[25] = '8',
		[26] = '9',
		[27] = ':',
		[28] = ';',
		[29] = '<',
		[30] = '=',
		[31] = '>',
		[32] = '?',
		[33] = '@',
		[34] = 'A',
		[35] = 'B',
		[36] = 'C',
		[37] = 'D',
		[38] = 'E',
		[39] = 'F',
		[40] = 'G',
		[41] = 'H',
		[42] = 'I',
		[43] = 'J',
		[44] = 'K',
		[45] = 'L',
		[46] = 'M',
		[47] = 'N',
		[48] = 'O',
		[49] = 'P',
		[50] = 'Q',
		[51] = 'R',
		[52] = 'S',
		[53] = 'T',
		[54] = 'U',
		[55] = 'V',
		[56] = 'W',
		[57] = 'X',
		[58] = 'Y',
		[59] = 'Z',
		[60] = '[',
		[61] = "\\",
		[62] = ']',
		[63] = '^',
		[64] = '_',
		[65] = '`',
		[66] = 'a',
		[67] = 'b',
		[68] = 'c',
		[69] = 'd',
		[70] = 'e',
		[71] = 'f',
		[72] = 'g',
		[73] = 'h',
		[74] = 'i',
		[75] = 'j',
		[76] = 'k',
		[77] = 'l',
		[78] = 'm',
		[79] = 'n',
		[80] = 'o',
		[81] = 'p',
		[82] = 'q',
		[83] = 'r',
		[84] = 's',
		[85] = 't',
		[86] = 'u',
		[87] = 'v',
		[88] = 'w',
		[89] = 'x',
		[90] = 'y',
		[91] = 'z',
		[92] = '{',
		[93] = '|',
		[94] = '}',
		[95] = '~'
	};
	ShiftCharacters = {
		["1"] = "!",
		["2"] = "@",
		["3"] = "#",
		["4"] = "$",
		["5"] = "%",
		["6"] = "^",
		["7"] = "&",
		["8"] = "*",
		["9"] = "(",
		["0"] = ")",
		["-"] = "_",
		["="] = "+",
		["["] = "{",
		["\\"] = "|",
		[";"] = ":",
		["'"] = "\"",
		[","] = "<",
		["."] = ">",
		["/"] = "?",
		["`"] = "~"
	};
	Keys = {
		[Enum.KeyCode.LeftShift] = "LShift",
		[Enum.KeyCode.RightShift] = "RShift",
		[Enum.KeyCode.LeftControl] = "LCtrl",
		[Enum.KeyCode.RightControl] = "RCtrl",
		[Enum.KeyCode.LeftAlt] = "LAlt",
		[Enum.KeyCode.RightAlt] = "RAlt",
		[Enum.KeyCode.CapsLock] = "Caps",
		[Enum.KeyCode.One] = "1",
		[Enum.KeyCode.Two] = "2",
		[Enum.KeyCode.Three] = "3",
		[Enum.KeyCode.Four] = "4",
		[Enum.KeyCode.Five] = "5",
		[Enum.KeyCode.Six] = "6",
		[Enum.KeyCode.Seven] = "7",
		[Enum.KeyCode.Eight] = "8",
		[Enum.KeyCode.Nine] = "9",
		[Enum.KeyCode.Zero] = "0",
		[Enum.KeyCode.KeypadOne] = "Num1",
		[Enum.KeyCode.KeypadTwo] = "Num2",
		[Enum.KeyCode.KeypadThree] = "Num3",
		[Enum.KeyCode.KeypadFour] = "Num4",
		[Enum.KeyCode.KeypadFive] = "Num5",
		[Enum.KeyCode.KeypadSix] = "Num6",
		[Enum.KeyCode.KeypadSeven] = "Num7",
		[Enum.KeyCode.KeypadEight] = "Num8",
		[Enum.KeyCode.KeypadNine] = "Num9",
		[Enum.KeyCode.KeypadZero] = "Num0",
		[Enum.KeyCode.Minus] = "-",
		[Enum.KeyCode.Equals] = "=",
		[Enum.KeyCode.Tilde] = "~",
		[Enum.KeyCode.LeftBracket] = "[",
		[Enum.KeyCode.RightBracket] = "]",
		[Enum.KeyCode.RightParenthesis] = ")",
		[Enum.KeyCode.LeftParenthesis] = "(",
		[Enum.KeyCode.Semicolon] = ",",
		[Enum.KeyCode.Quote] = "'",
		[Enum.KeyCode.BackSlash] = "\\",
		[Enum.KeyCode.Comma] = ",",
		[Enum.KeyCode.Period] = ".",
		[Enum.KeyCode.Slash] = "/",
		[Enum.KeyCode.Asterisk] = "*",
		[Enum.KeyCode.Plus] = "+",
		[Enum.KeyCode.Period] = ".",
		[Enum.KeyCode.Backquote] = "`",
		[Enum.UserInputType.MouseButton1] = "MB1",
		[Enum.UserInputType.MouseButton2] = "MB2",
		[Enum.UserInputType.MouseButton3] = "MB3"
	};
	Connections = {};
	Font = Enum.Font.Ubuntu;
	FontSize = 12;
	Notifs = {};
	KeyList = nil;
	UIKey = Enum.KeyCode.End;
	ScreenGUI = nil;
}


local InputService = game:GetService("UserInputService");
local TeleportService = game:GetService("TeleportService");
local RunService = game:GetService("RunService");
local Workspace = game:GetService("Workspace");
local Lighting = game:GetService("Lighting");
local Players = game:GetService("Players");
local HttpService = game:GetService("HttpService");
local StarterGui = game:GetService("StarterGui");
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local TweenService = game:GetService("TweenService");
local VirtualUser = game:GetService("VirtualUser");
local PathFindingService = game:GetService("PathfindingService");

local utility = {
	Circle = nil, 
	bodyParts = {}, 
	target = nil, 
	angle = 0, 
	drawings = {}, 
	folders = {}
};
local framework = {connections = {}};
local Flags = {}; 
local flags = Library.Flags;
local ESP = {};
local IgnoreList = {};
local HitReg = {};
local loadingTime = tick() 
local Visuals = {   
    ["Drawings"] = {},
	["Bases"] = {},
	["Base"] = {},
	["Settings"] = { 
		["Line"] = {
		    Thickness = 1,
		    Color = Color3.fromRGB(238,32,253)
	    },
		["Text"] = {
			Size = 13,
			Center = true,
			Outline = true,
			Font = Drawing.Fonts.Plex,
			Color = Color3.fromRGB(255, 255, 255)
		},
		["Square"] = {
			Thickness = 1,
			Color = Color3.fromRGB(255, 255, 255),
			Filled = false,
		},
		["Triangle"] = {
			Color = Color3.fromRGB(255, 255, 255),
			Filled = true,
			Visible = false,
			Thickness = 1,
		},
		["Image"] = {
			Transparency = 1,
			Data = game:HttpGet("https://raw.githubusercontent.com/portallol/luna/main/Gradient.png")
		}
	},
}
local sfx = {["Bameware"] = "16910460773",["Skeet"] = "4753603610",["Bonk"] = "3765689841",["Lazer Beam"] = "130791043",["Windows XP Error"] = "160715357",["TF2 Hitsound"] = "3455144981",["TF2 Critical"] = "296102734",["TF2 Bat"] = "3333907347",['Bow Hit'] = "1053296915",['Bow'] = "3442683707",['OSU'] = "7147454322",['Minecraft Hit'] = "4018616850",['Steve'] = "5869422451",['1nn'] = "7349055654",['Rust'] = "3744371091",["TF2 Pan"] = "3431749479",["Neverlose"] = "8679627751",["Mario"] = "5709456554",};
local sfx_names = {"Bameware", "Skeet", "Bonk", "Lazer Beam", "Windows XP Error", "TF2 Hitsound", "TF2 Critical", "TF2 Bat", "Bow Hit", "Bow", "OSU", "Minecraft Hit", "Steve", "1nn", "Rust", "TF2 Pan", "Neverlose", "Mario"};
local LocalPlayer = Players.LocalPlayer; 
local Mouse = LocalPlayer:GetMouse();
local Camera = Workspace.Camera;
local viewportSize = game.Workspace.Camera.ViewportSize;
local hitmodule = game:GetObjects("rbxassetid://7255773215")[1]; hitmodule.Parent = ReplicatedStorage;
local Offset = game:GetService("GuiService"):GetGuiInset().Y;
local Math = loadstring(game:HttpGet("https://raw.githubusercontent.com/f1nobe7650/Lynx/main/Math.lua"))(); 
local NotifiactionSGui = Instance.new("ScreenGui", game.CoreGui); NotifiactionSGui.Enabled = true
local Remote = ReplicatedStorage.MainEvent
local NewVector2 = Vector2.new;
local NewVector3 = Vector3.new;
local NewCFrame = CFrame.new; 
local Angle = CFrame.Angles; 
local NewHex = Color3.fromHex;
local Floor = math.floor;
local Random = math.random; 
local Find = table.find;
local Round = math.round;
local Cos = math.cos;
local Sin = math.sin;
local Rad = math.rad; 
local Clamp = math.clamp; 
local Ceil = math.ceil; 
local Pi = math.pi;
local Sqrt = math.sqrt;
local Lighting_Save = {["ColorShift_Bottom"] = Lighting.ColorShift_Bottom, ["Ambient"]=Lighting.Ambient, ["OutdoorAmbient"]=Lighting.OutdoorAmbient, ["ColorShift_Top"]=Lighting.ColorShift_Top, ["FogColor"]=Lighting.FogColor, ["FogEnd"]=Lighting.FogEnd, ["FogStart"]=Lighting.FogStart, ["ClockTime"]=Lighting.ClockTime, ["Brightness"]=Lighting.Brightness}
local bodyClone = game:GetObjects("rbxassetid://8246626421")[1]; bodyClone.Humanoid:Destroy(); bodyClone.Head.Face:Destroy(); bodyClone.Parent = game.Workspace; bodyClone.HumanoidRootPart.Velocity = Vector3.new(); bodyClone.HumanoidRootPart.CFrame = NewCFrame(9999,9999,9999); bodyClone.HumanoidRootPart.Transparency = 1; bodyClone.HumanoidRootPart.CanCollide = false 
local visualizeChams = Instance.new("Highlight"); visualizeChams.Enabled = true; visualizeChams.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop; visualizeChams.FillColor = Color3.fromRGB(238,32,253); visualizeChams.OutlineColor =  Color3.fromRGB(0, 0, 0); visualizeChams.Adornee = bodyClone; visualizeChams.OutlineTransparency = 0.2; visualizeChams.FillTransparency = 0.5; visualizeChams.Parent = game.CoreGui
local targetHighlight = Instance.new("Highlight", game.CoreGui); targetHighlight.Enabled = true; targetHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop; targetHighlight.FillColor = Color3.fromRGB(0,0,0); targetHighlight.OutlineColor = Color3.fromRGB(238,32,253); targetHighlight.OutlineTransparency = 0.5; targetHighlight.FillTransparency = 0;
local IgnoreList = {};
local Tween = {};
local crosshair_Lines = {}; 
local crosshair_Outlines = {}; 
local C_Desync = {Enabled = false, OldPosition = nil, PredictedPosition = nil};
local connections = {};
local highlights = {};
local Dropdowns = {}; 
local Pickers = {}; 
local VisValues = {}; 
local Typing = false; 
local aimAssistTarget; 
local checks; 
local prediction; 
local partClosest; 
local antiCheattick = 0; 
local CursorSize = 0; 
local statsTick = 0;
local crosshair_LineAmount = 4;
local crosshair_SpinAngle = 0; 
local crosshair_tick = 0;
local buying = false; 
local PlaceHolderUI = Instance.new("ScreenGui", game.CoreGui);
PlaceHolderUI.Enabled = false
local Path = 
	"https://raw.githubusercontent.com/fortniteisveryepic/assets/main/"
local images = {
	["[AK47]"] = game:HttpGet(Path.. "ak.png"),
	["[AR]"] = game:HttpGet(Path.. "ar.png"),
	["[AUG]"] = game:HttpGet(Path.. "aug.png"),
	["[Double-Barrel SG]"] = game:HttpGet(Path.. "db.png"),
	["[DrumGun]"] = game:HttpGet(Path.. "drumgun.png"),
	["[Flamethrower]"] = game:HttpGet(Path.. "flame.png"),
	["[Glock]"] = game:HttpGet(Path.. "glock.png"),
	["[LMG]"] = game:HttpGet(Path.. "lmg.png"),
	["[P90]"]= game:HttpGet(Path.. "p90.png"),
	["[Revolver]"] = game:HttpGet(Path.. "rev.png"),
	["[SMG]"] = game:HttpGet(Path.. "smg.png"),
	["[Shotgun]"] = game:HttpGet(Path.. "shotgun.png"),
	["[SilencerAR]"] = game:HttpGet(Path.. "ar.png"),
	["[TacticalShotgun]"] = game:HttpGet(Path.. "tac.png"),
	["[Knife]"] = game:HttpGet(Path.. "knife.png"),
	["[Rifle]"] = game:HttpGet(Path.. "rifle.png")
} 
local Languages = {
    A = {English = "A", Arabic = "Ø£", Albanian = "A", Japanese = "ã‚", Spanish = "A", Russian = "Ð", Chinese = "é˜¿", Urdu = "Ø§", French = "A", Portuguese = "A", Hindi = "à¤…"},
    B = {English = "B", Arabic = "Ø¨", Albanian = "B", Japanese = "ã„", Spanish = "B", Russian = "Ð‘", Chinese = "æ³¢", Urdu = "Ø¨", French = "B", Portuguese = "B", Hindi = "à¤¬"},
    C = {English = "C", Arabic = "Øª", Albanian = "C", Japanese = "ã†", Spanish = "C", Russian = "Ð¦", Chinese = "è¥¿", Urdu = "Ø³", French = "C", Portuguese = "C", Hindi = "à¤¸"},
    D = {English = "D", Arabic = "Ø¯", Albanian = "D", Japanese = "ãˆ", Spanish = "D", Russian = "Ð”", Chinese = "å¾·", Urdu = "Úˆ", French = "D", Portuguese = "D", Hindi = "à¤¡"},
    E = {English = "E", Arabic = "Ø¥", Albanian = "E", Japanese = "ãŠ", Spanish = "E", Russian = "Ð•", Chinese = "ä¿„", Urdu = "Ø§Û’", French = "E", Portuguese = "E", Hindi = "à¤"},
    F = {English = "F", Arabic = "Ù", Albanian = "F", Japanese = "ã‹", Spanish = "F", Russian = "Ð¤", Chinese = "å¤«", Urdu = "Ù", French = "F", Portuguese = "F", Hindi = "à¤«"},
    G = {English = "G", Arabic = "Ø¬", Albanian = "G", Japanese = "ã", Spanish = "G", Russian = "Ð“", Chinese = "å‰", Urdu = "Ø¬", French = "G", Portuguese = "G", Hindi = "à¤—"},
    H = {English = "H", Arabic = "Ø­", Albanian = "H", Japanese = "ã", Spanish = "H", Russian = "Ð¥", Chinese = "è‰¾å°º", Urdu = "Ø­", French = "H", Portuguese = "H", Hindi = "à¤¹"},
    I = {English = "I", Arabic = "ÙŠ", Albanian = "I", Japanese = "ã‘", Spanish = "I", Russian = "Ð˜", Chinese = "ä¼Š", Urdu = "Ø¢Ø¦ÛŒ", French = "I", Portuguese = "I", Hindi = "à¤‡"},
    J = {English = "J", Arabic = "Ø¬", Albanian = "J", Japanese = "ã“", Spanish = "J", Russian = "Ð™", Chinese = "æ°", Urdu = "Ø¬Û’", French = "J", Portuguese = "J", Hindi = "à¤œ"},
    K = {English = "K", Arabic = "Ùƒ", Albanian = "K", Japanese = "ã•", Spanish = "K", Russian = "Ðš", Chinese = "å¼€", Urdu = "Ú©Û’", French = "K", Portuguese = "K", Hindi = "à¤•"},
    L = {English = "L", Arabic = "Ù„", Albanian = "L", Japanese = "ã—", Spanish = "L", Russian = "Ð›", Chinese = "è‰¾å‹’", Urdu = "Ù„", French = "L", Portuguese = "L", Hindi = "à¤²"},
    M = {English = "M", Arabic = "Ù…", Albanian = "M", Japanese = "ã™", Spanish = "M", Russian = "Ðœ", Chinese = "è‰¾é©¬", Urdu = "Ù…", French = "M", Portuguese = "M", Hindi = "à¤®"},
    N = {English = "N", Arabic = "Ù†", Albanian = "N", Japanese = "ã›", Spanish = "N", Russian = "Ð", Chinese = "è‰¾å¨œ", Urdu = "Ù†", French = "N", Portuguese = "N", Hindi = "à¤¨"},
    O = {English = "O", Arabic = "Ø£Ùˆ", Albanian = "O", Japanese = "ã", Spanish = "O", Russian = "Ðž", Chinese = "å“¦", Urdu = "Ø§Ùˆ", French = "O", Portuguese = "O", Hindi = "à¤“"},
    P = {English = "P", Arabic = "Ø¨", Albanian = "P", Japanese = "ãŸ", Spanish = "P", Russian = "ÐŸ", Chinese = "å±", Urdu = "Ù¾", French = "P", Portuguese = "P", Hindi = "à¤ª"},
    Q = {English = "Q", Arabic = "Ù‚", Albanian = "Q", Japanese = "ã¡", Spanish = "Q", Russian = "Ðš", Chinese = "ä¸˜", Urdu = "Ù‚", French = "Q", Portuguese = "Q", Hindi = "à¤•à¥à¤¯à¥‚"},
    R = {English = "R", Arabic = "Ø±", Albanian = "R", Japanese = "ã¤", Spanish = "R", Russian = "Ð ", Chinese = "è‰¾å„¿", Urdu = "Ø±", French = "R", Portuguese = "R", Hindi = "à¤°"},
    S = {English = "S", Arabic = "Ø³", Albanian = "S", Japanese = "ã¦", Spanish = "S", Russian = "Ð¡", Chinese = "è‰¾ä¸", Urdu = "Ø³", French = "S", Portuguese = "S", Hindi = "à¤à¤¸"},
    T = {English = "T", Arabic = "Øª", Albanian = "T", Japanese = "ã¨", Spanish = "T", Russian = "Ð¢", Chinese = "æ", Urdu = "Ù¹", French = "T", Portuguese = "T", Hindi = "à¤Ÿ"},
    U = {English = "U", Arabic = "Ø£Ùˆ", Albanian = "U", Japanese = "ãª", Spanish = "U", Russian = "Ð£", Chinese = "ä¼˜", Urdu = "ÛŒÙˆ", French = "U", Portuguese = "U", Hindi = "à¤¯à¥‚"},
    V = {English = "V", Arabic = "Ù", Albanian = "V", Japanese = "ã«", Spanish = "V", Russian = "Ð’", Chinese = "ç»´", Urdu = "ÙˆÛŒ", French = "V", Portuguese = "V", Hindi = "à¤µ"},
    W = {English = "W", Arabic = "Ùˆ", Albanian = "W", Japanese = "ã¬", Spanish = "W", Russian = "Ð’", Chinese = "è±†è´å°”ç»´", Urdu = "ÚˆØ¨Ù„ÛŒÙˆ", French = "W", Portuguese = "W", Hindi = "à¤¡à¤¬à¥à¤²à¥à¤¯à¥‚"},
    X = {English = "X", Arabic = "Ø¥ÙƒØ³", Albanian = "X", Japanese = "ã­", Spanish = "X", Russian = "Ð¥", Chinese = "è‰¾å…‹æ–¯", Urdu = "Ø§Ú©Ø³", French = "X", Portuguese = "X", Hindi = "à¤à¤•à¥à¤¸"},
    Y = {English = "Y", Arabic = "ÙŠ", Albanian = "Y", Japanese = "ã®", Spanish = "Y", Russian = "Ð£", Chinese = "ä¼Šå„¿", Urdu = "ÙˆØ§Ø¦ÛŒ", French = "Y", Portuguese = "Y", Hindi = "à¤µà¤¾à¤ˆ"},
    Z = {English = "Z", Arabic = "Ø²", Albanian = "Z", Japanese = "ã¯", Spanish = "Z", Russian = "Ð—", Chinese = "è´¼å¾·", Urdu = "Ø²ÛŒÚˆ", French = "Z", Portuguese = "Z", Hindi = "à¤œà¥‡à¤¡"}
}
local utx = {} 
local Messages = {}
local drawingCache = {} 

utility.folders["Part Chams"] = Instance.new("Folder", Workspace);
utility.folders["Hit Chams"] = Instance.new("Folder", Workspace);
Library.__index = Library;
Library.Pages.__index = Library.Pages;
Library.Sections.__index = Library.Sections;

-- // Functions
do 
	-- // Library Functions
	do
		function Library:Connection(Signal, Callback)
			local Con = Signal:Connect(Callback)
			return Con
		end
		--  
		function Library:updateNotifsPositions(position)
			for i, v in pairs(Library.Notifs) do 
				local Position = position == "Middle" and NewVector2(viewportSize.X/2 - (v["Objects"][3].TextBounds.X + 4)/2,600) or NewVector2(20, 20)
				game:GetService("TweenService"):Create(v.Container, TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0,Position.X,0,Position.Y + (i * 25))}):Play()
			end 
		end
		-- 
		function Library:Notification(message, duration, color, position)
			local notification = {Container = nil, Objects = {}}
			-- 
			local NotifContainer = Instance.new('Frame', NotifiactionSGui)
			local Background = Instance.new('Frame', NotifContainer)
			local Outline = Instance.new('Frame', Background)
			local UIStroke = Instance.new('UIStroke', Outline)
			local TextLabel = Instance.new('TextLabel', Background)
			local Accemt = Instance.new('Frame', Background)
			local Progress = Instance.new('Frame', Background)
			--
			local Position = position == "Middle" and NewVector2(viewportSize.X/2 - (TextLabel.TextBounds.X + 4)/2, 600) or NewVector2(20, 20)
			--
			NotifContainer.Name = "NotifContainer"
			NotifContainer.Position = UDim2.new(0,Position.X, 0, Position.Y)
			NotifContainer.Size = UDim2.new(0,TextLabel.TextBounds.X + 4,0,20)
			NotifContainer.BackgroundColor3 = Color3.new(1,1,1)
			NotifContainer.BackgroundTransparency = 1
			NotifContainer.BorderSizePixel = 0
			NotifContainer.BorderColor3 = Color3.new(0,0,0)
			NotifContainer.ZIndex = 99999999
			notification.Container = NotifContainer
			--
			Background.Name = "Background"
			Background.Size = UDim2.new(1,0,1,0)
			Background.BackgroundColor3 = Color3.new(0.0588,0.0588,0.0784)
			Background.BorderColor3 = Color3.new(0.1373,0.1373,0.1569)
			table.insert(notification.Obje
